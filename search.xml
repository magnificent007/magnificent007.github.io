<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Bing不收录的坑</title>
    <url>/p/85d08e87/</url>
    <content><![CDATA[<hr>
<blockquote>
<p>事情的缘由是我在必应站长里将sitemap进行了提交，也显示已通过，但site显示不出。记得之前的.top域名提交了sitemap通过后不到两小时就被收录了，但是这次换成.com域名重新提交sitemap通过后，一直没有收录，一开始显示查询不到，过了四五天重新site了下发现出现如下的显示：为回应符合本地法律要求的通知，部分搜索结果未予显示。有关详细信息，请参阅此处。就很懵，我寻思我博客也没做什么违法勾当啊，怎么不予显示。通过查找网上资料和仔细查看了必应站长工具，发现 <code>SED</code> 下有个 <code>网站扫描</code> 选项，可以检查自己的网站出了什么问题，于是尝试了，果然不出所料 <code>T^T~</code> ，出现的问题如下：</p>
</blockquote>
<p><img data-src="https://img-blog.csdnimg.cn/f50c8851011f4d5aba34d185447f4cc6.png" alt="图1"></p>
<blockquote>
<p>首页缺少了Meta Description标记，又或者Meta Description标记太长或太短，必应的推荐是维持在 <code>25~160</code> 个字符之间。由于我使用的是NexT主题，主题推荐通过 <code>&lt;!-- more --&gt;</code> 的方式进行文章的首页显示截断，但是这样很难控制在25~160个字符之间，所以还是通过在文章头加入 <code>description</code> 的方式进行描述和截断。而首页的Meta Description标记确实应该是我在Hexo下的根 <code>_config.xml</code> 文件中的 <code>description</code> 没有写入东西造成的。</p>
<p>把这些东西修改好后重新hexo d到远程仓库。晚上睡觉时，本想着如果还不行就放弃了，结果在Bing浏览器通过site了一下，发现已经被收录了! <code>ヽ(￣▽￣)ﾉ</code></p>
<p>如果各位遇到必应好几天不收录的情况建议检查博客是不是漏写或者没按必应的要求规范书写，使用 <code>网站扫描</code> 检查一下，要不然是不会出现sitemap通过但是一连好几天不收录的情况。</p>
</blockquote>
]]></content>
      <categories>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
        <tag>Next</tag>
      </tags>
  </entry>
  <entry>
    <title>ES6简单map结构实现</title>
    <url>/p/25175edc/</url>
    <content><![CDATA[<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">myMap</span>&#123;</span><br><span class="line">	<span class="title function_">constructor</span>(<span class="params">obj</span>)&#123;</span><br><span class="line">		<span class="variable language_">this</span>.<span class="property">obj</span> = &#123;&#125;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">length</span> = <span class="number">0</span></span><br><span class="line">        <span class="keyword">if</span>(<span class="title class_">Array</span>.<span class="title function_">isArray</span>(obj))&#123;</span><br><span class="line">            obj.<span class="title function_">every</span>(<span class="function">(<span class="params">item, index, arr</span>) =&gt;</span> &#123;</span><br><span class="line">                <span class="keyword">if</span>(<span class="title class_">Array</span>.<span class="title function_">isArray</span>(item))&#123;</span><br><span class="line">                    <span class="variable language_">this</span>.<span class="property">obj</span>[item[<span class="number">0</span>]] = item[<span class="number">1</span>]</span><br><span class="line">                    <span class="variable language_">this</span>.<span class="property">length</span> += <span class="number">1</span></span><br><span class="line">                    <span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line">                &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                    <span class="variable language_">this</span>.<span class="property">obj</span> = &#123;&#125;</span><br><span class="line">                    <span class="variable language_">this</span>.<span class="property">length</span> = <span class="number">0</span></span><br><span class="line">                    <span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="title function_">has</span>(<span class="params">key</span>)&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">obj</span>.<span class="title function_">hasOwnProperty</span>(key)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="title function_">size</span>(<span class="params"></span>)&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">length</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="title function_">get</span>(<span class="params">key</span>)&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="variable language_">this</span>.<span class="title function_">has</span>(key))&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">obj</span>[key]</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="title function_">set</span>(<span class="params">key, value</span>)&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="variable language_">this</span>.<span class="title function_">has</span>(key))&#123;</span><br><span class="line">            <span class="variable language_">this</span>.<span class="property">obj</span>[key] = value</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="variable language_">this</span>.<span class="property">obj</span>[key] = value</span><br><span class="line">            <span class="variable language_">this</span>.<span class="property">length</span> += <span class="number">1</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">this</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="title function_">keys</span>(<span class="params"></span>)&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="title class_">Object</span>.<span class="title function_">keys</span>(<span class="variable language_">this</span>.<span class="property">obj</span>)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="title function_">values</span>(<span class="params"></span>)&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="title class_">Object</span>.<span class="title function_">values</span>(<span class="variable language_">this</span>.<span class="property">obj</span>)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="title function_">entries</span>(<span class="params"></span>)&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="title class_">Object</span>.<span class="title function_">entries</span>(<span class="variable language_">this</span>.<span class="property">obj</span>)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="title function_">delete</span>(<span class="params">key</span>)&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="variable language_">this</span>.<span class="title function_">has</span>(key))&#123;</span><br><span class="line">            <span class="variable language_">this</span>.<span class="property">length</span> -= <span class="number">1</span></span><br><span class="line">            <span class="keyword">delete</span> <span class="variable language_">this</span>.<span class="property">obj</span>[key]</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">this</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="title function_">clear</span>(<span class="params"></span>)&#123;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">obj</span> = &#123;&#125;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">length</span> = <span class="number">0</span></span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">this</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> my_Map = <span class="keyword">new</span> <span class="title function_">myMap</span>()</span><br><span class="line">my_Map.<span class="title function_">set</span>(<span class="string">&#x27;foo&#x27;</span>, <span class="literal">true</span>).<span class="title function_">set</span>(<span class="string">&#x27;foo2&#x27;</span>, <span class="literal">false</span>).<span class="title function_">set</span>(<span class="string">&#x27;foo2&#x27;</span>, <span class="number">1</span>)</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(my_Map);</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> map = <span class="keyword">new</span> <span class="title class_">Map</span>()</span><br><span class="line">map.<span class="title function_">set</span>(<span class="string">&#x27;foo&#x27;</span>, <span class="literal">true</span>)</span><br><span class="line">map.<span class="title function_">set</span>(<span class="string">&#x27;foo2&#x27;</span>, <span class="literal">false</span>)</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(map);</span><br><span class="line">    </span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>前端</category>
      </categories>
      <tags>
        <tag>JavaScript</tag>
      </tags>
  </entry>
  <entry>
    <title>Hexo+NexT8.1+Waline踩坑记录</title>
    <url>/p/2fdb9925/</url>
    <content><![CDATA[<h3 id="说明：由于NexT8-1-0移除了对valine的内置支持，转而使用waline。在配置的过程中踩的一些坑。"><a href="#说明：由于NexT8-1-0移除了对valine的内置支持，转而使用waline。在配置的过程中踩的一些坑。" class="headerlink" title="说明：由于NexT8.1.0移除了对valine的内置支持，转而使用waline。在配置的过程中踩的一些坑。"></a>说明：由于NexT8.1.0移除了对valine的内置支持，转而使用waline。在配置的过程中踩的一些坑。</h3><hr>
<h4 id="1-waline官方网址-https-waline-js-org"><a href="#1-waline官方网址-https-waline-js-org" class="headerlink" title="1.  waline官方网址 https://waline.js.org/"></a>1.  waline官方网址 <span class="exturl" data-url="aHR0cHM6Ly93YWxpbmUuanMub3JnLw==">https://waline.js.org/<i class="fa fa-external-link-alt"></i></span></h4><h4 id="2-注册LeanCloud"><a href="#2-注册LeanCloud" class="headerlink" title="2. 注册LeanCloud"></a>2. 注册LeanCloud</h4><p>LeanCloud地址：<span class="exturl" data-url="aHR0cHM6Ly9jb25zb2xlLmxlYW5jbG91ZC5hcHAv">https://console.leancloud.app/<i class="fa fa-external-link-alt"></i></span>，注册登录时最好选择<font color=red><strong>国际版</strong></font>。</p>
<p><img data-src="https://img-blog.csdnimg.cn/7abc719581514c638df88cc20b0a82be.png" alt="图1"></p>
<h4 id="3-创建应用"><a href="#3-创建应用" class="headerlink" title="3. 创建应用"></a>3. 创建应用</h4><p>点击左上角创建应用按钮：</p>
<p><img data-src="https://img-blog.csdnimg.cn/acefde02db9f4154ae35bd3f645b3839.png" alt="图2"></p>
<p>名称和描述随便填一个名字：</p>
<p><img data-src="https://img-blog.csdnimg.cn/b996115200624dd2955b867f607e31b4.png" alt="图3"></p>
<p>创建完成后如下图所示：</p>
<p><img data-src="https://img-blog.csdnimg.cn/e2ad922168dd47c5a9f53887fbca78b6.png" alt="图4"></p>
<p>点击左下的 设置 &gt; 应用凭证，可以看到你自己的AppID、AppKey、MasterKey，在后面的部署需要用到：</p>
<p><img data-src="https://img-blog.csdnimg.cn/7c3e667d701f481f8962c90a5024722e.png" alt="图5"></p>
<h4 id="4-回到LeanCloud页进行部署"><a href="#4-回到LeanCloud页进行部署" class="headerlink" title="4. 回到LeanCloud页进行部署"></a>4. 回到LeanCloud页进行部署</h4><p><span class="exturl" data-url="aHR0cHM6Ly93YWxpbmUuanMub3JnL2d1aWRlL2dldC1zdGFydGVkLmh0bWw=">https://waline.js.org/guide/get-started.html<i class="fa fa-external-link-alt"></i></span></p>
<p><img data-src="https://img-blog.csdnimg.cn/58d15efe44c64469a4bb2070689d1bdb.png" alt="图6"></p>
<p>vercel项目名随便写，好了点create。等待部署成功后，此时点击 Go to Dashboard 可以跳转到应用的控制台。</p>
<p>点击顶部的 Settings - Environment Variables 进入环境变量配置页，并配置三个环境变量 LEAN_ID, LEAN_KEY 和 LEAN_MASTER_KEY 。它们的值分别对应上一步在 LeanCloud 中获得的 APP ID, APP KEY, Master Key。</p>
<p><img data-src="https://img-blog.csdnimg.cn/709b937a82f64e7d816fdd4868d8517d.png" alt="图7"></p>
<p><font color=red>好了，到这一步坑来了，先别急着部署，评论设置肯定要有评论通知，这里我采用邮件通知的方式。官网的消息通知需要设置环境变量参数，起初我以为是设置在LeanCloud上的，毕竟受了之前valine的先入为主，结果试了下无法接收到邮件通知。所以我想是不是设置在vercel上的？？？</font>把环境变量参数填上试试咯，果然可以接收邮件通知了。我的如下图设置：</p>
<p><img data-src="https://img-blog.csdnimg.cn/d2c0b248b584468487d46ba1534a84e9.png" alt="图8"></p>
<p>注意SMTP_PASS要到你邮箱开启，填入授权码：</p>
<p><img data-src="https://img-blog.csdnimg.cn/7ddd289199724489a7221ba5a1d3a6bf.png" alt="图9"></p>
<p>设置完后进行部署。</p>
<h4 id="3-在Next中配置"><a href="#3-在Next中配置" class="headerlink" title="3. 在Next中配置"></a>3. 在Next中配置</h4><p>先到你hexo的站点目录下安装waline：</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">npm install @waline/hexo-next --save</span><br></pre></td></tr></table></figure>
<p>找到Next主题配置文件，我这里是在站点目录下的_config.next.yml进行如下配置，方便日后升级覆盖：</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"># <span class="title class_">Waline</span></span><br><span class="line"># <span class="title class_">For</span> more <span class="attr">information</span>: <span class="attr">https</span>:<span class="comment">//waline.js.org, https://github.com/walinejs/waline</span></span><br><span class="line"><span class="attr">waline</span>:</span><br><span class="line">  <span class="attr">enable</span>: <span class="literal">true</span> #是否开启</span><br><span class="line">  <span class="attr">serverURL</span>: xxxxxxxx.<span class="property">vercel</span>.<span class="property">app</span> # <span class="title class_">Waline</span> #服务端地址，我们这里就是上面部署的 <span class="title class_">Vercel</span> 地址</span><br><span class="line">  <span class="attr">placeholder</span>: 请文明评论呀~ # #评论框的默认文字</span><br><span class="line">  <span class="attr">avatar</span>: # 头像风格</span><br><span class="line">  <span class="attr">meta</span>: [nick, mail, link] # 自定义评论框上面的三个输入框的内容</span><br><span class="line">  <span class="attr">pageSize</span>: <span class="number">10</span> # 评论数量多少时显示分页</span><br><span class="line">  <span class="attr">lang</span>: zh-cn # 语言, 可选值: en, zh-cn</span><br><span class="line">  # <span class="title class_">Warning</span>: 不要同时启用 <span class="string">`waline.visitor`</span> 以及 <span class="string">`leancloud_visitors`</span>.</span><br><span class="line">  <span class="attr">visitor</span>: <span class="literal">true</span> # 文章阅读统计</span><br><span class="line">  <span class="attr">comment_count</span>: <span class="literal">true</span> # 如果为 <span class="literal">false</span> , 评论数量只会在当前评论页面显示, 主页则不显示</span><br><span class="line">  <span class="attr">requiredFields</span>: [nick, mail] # 设置用户评论时必填的信息，[nick,mail]: [nick] | [nick, mail]</span><br><span class="line">  <span class="attr">libUrl</span>: # <span class="title class_">Set</span> custom library cdn url</span><br></pre></td></tr></table></figure>
<p>到此，就可以进行评论同时可以接收到邮件通知了。</p>
<h4 id="4-waline自带后台评论管理"><a href="#4-waline自带后台评论管理" class="headerlink" title="4. waline自带后台评论管理"></a>4. waline自带后台评论管理</h4><p>当评论插件都设置完成可以使用后，尽快登录xxxxxxxx.vercel.app/ui/login进行第一次注册登录，第一次会当成管理员。<font color=red><strong>注意</strong>：这里xxxxxxxx.vercel.app是你vercel部署后分配的vercel域名。</font></p>
]]></content>
      <categories>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
        <tag>Next</tag>
      </tags>
  </entry>
  <entry>
    <title>JavaScript继承的五种方式</title>
    <url>/p/74090c22/</url>
    <content><![CDATA[<h3 id="1-借用构造函数"><a href="#1-借用构造函数" class="headerlink" title="1. 借用构造函数"></a>1. 借用构造函数</h3><p>解决原型中包含引用类型值多带来的问题。即在子类型构造函数内部调用父类型构造函数，可以在子类构造函数内部通过apply()和call()方法来执行父类构造函数。</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 父类无传参</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">SuperType</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">colors</span> = [<span class="string">&quot;red&quot;</span>, <span class="string">&quot;blue&quot;</span>, <span class="string">&quot;green&quot;</span>];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">SubType</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="title class_">SuperType</span>.<span class="title function_">call</span>(<span class="variable language_">this</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> instance1 = <span class="keyword">new</span> <span class="title class_">SubType</span>();</span><br><span class="line">instance1.<span class="property">colors</span>.<span class="title function_">push</span>(<span class="string">&quot;black&quot;</span>);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(instance1.<span class="property">colors</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> instance2 = <span class="keyword">new</span> <span class="title class_">SubType</span>();</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(instance2.<span class="property">colors</span>);</span><br></pre></td></tr></table></figure>

<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 父类传参</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">SuperType</span>(<span class="params">name</span>) &#123;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">name</span> = name;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">SubType</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="title class_">SuperType</span>.<span class="title function_">call</span>(<span class="variable language_">this</span>, <span class="string">&quot;xyg&quot;</span>);</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">age</span> = <span class="number">29</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> instance = <span class="keyword">new</span> <span class="title class_">SubType</span>();</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(instance.<span class="property">name</span>);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(instance.<span class="property">age</span>);</span><br></pre></td></tr></table></figure>
<ul>
<li>优势： 可以在子类构造函数中向父类构造函数传递参数</li>
<li>缺点： 构造函数模式普遍存在的问题–方法都在构造函数内部定义，函数复用无从说起；而且在父类中定义的方法对子类也是不可见的。</li>
</ul>
<h3 id="2-原型式继承"><a href="#2-原型式继承" class="headerlink" title="2. 原型式继承"></a>2. 原型式继承</h3><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> person = &#123;</span><br><span class="line">    <span class="attr">name</span>: <span class="string">&quot;xyg&quot;</span>,</span><br><span class="line">    <span class="attr">friends</span>: [<span class="string">&quot;a&quot;</span>, <span class="string">&quot;b&quot;</span>, <span class="string">&quot;c&quot;</span>]</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> firstPerson = <span class="title class_">Object</span>.<span class="title function_">create</span>(person);</span><br><span class="line">firstPerson.<span class="property">name</span> = <span class="string">&quot;gg&quot;</span>;    <span class="comment">// 覆盖了原型对象person中的name值</span></span><br><span class="line">firstPerson.<span class="property">friends</span>.<span class="title function_">push</span>(<span class="string">&quot;d&quot;</span>);  <span class="comment">// 增加了原型对象person引用类型friends中的元素</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> secondPerson = <span class="title class_">Object</span>.<span class="title function_">create</span>(person);</span><br><span class="line">secondPerson.<span class="property">name</span> = <span class="string">&quot;mm&quot;</span>;</span><br><span class="line">secondPerson.<span class="property">friends</span>.<span class="title function_">push</span>(<span class="string">&quot;e&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(person.<span class="property">name</span>);   <span class="comment">// 原型对象person中的name值不变</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(person.<span class="property">friends</span>);</span><br></pre></td></tr></table></figure>
<ul>
<li>Object.create()方法接收两个参数：一个用作新对象原型的对象和一个为新对象定义额外属性的对象</li>
<li>包含引用类型值的属性始终都会共享相应的值</li>
</ul>
<h3 id="3-组合继承"><a href="#3-组合继承" class="headerlink" title="3. 组合继承"></a>3. 组合继承</h3><p>将原型链和借用构造函数相结合，使用原型链实现对原型属性和方法的继承，而通过借用构造函数来实现对实例属性的继承。即通过在原型上定义方法实现了函数复用，又能够保证每个实例都有它自己的属性。</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">SuperType</span>(<span class="params">name</span>) &#123;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">name</span> = name;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">colors</span> = [<span class="string">&quot;red&quot;</span>, <span class="string">&quot;blue&quot;</span>, <span class="string">&quot;green&quot;</span>];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title class_">SuperType</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">sayName</span> = <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">this</span>.<span class="property">name</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">SubType</span>(<span class="params">name, age</span>) &#123;</span><br><span class="line">    <span class="comment">// 继承属性</span></span><br><span class="line">    <span class="title class_">SuperType</span>.<span class="title function_">call</span>(<span class="variable language_">this</span>, name);</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">age</span> = age;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 继承方法</span></span><br><span class="line"><span class="title class_">SubType</span>.<span class="property"><span class="keyword">prototype</span></span> = <span class="keyword">new</span> <span class="title class_">SuperType</span>();</span><br><span class="line"></span><br><span class="line"><span class="title class_">SubType</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">sayAge</span> = <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">this</span>.<span class="property">age</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> instance1 = <span class="keyword">new</span> <span class="title class_">SubType</span>(<span class="string">&quot;xyg&quot;</span>, <span class="number">24</span>);</span><br><span class="line">instance1.<span class="property">colors</span>.<span class="title function_">push</span>(<span class="string">&quot;black&quot;</span>);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(instance1.<span class="property">colors</span>);</span><br><span class="line">instance1.<span class="title function_">sayName</span>();</span><br><span class="line">instance1.<span class="title function_">sayAge</span>();</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> instance2 = <span class="keyword">new</span> <span class="title class_">SubType</span>(<span class="string">&quot;bwm&quot;</span>, <span class="number">25</span>);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(instance2.<span class="property">colors</span>);</span><br><span class="line">instance2.<span class="title function_">sayName</span>();</span><br><span class="line">instance2.<span class="title function_">sayAge</span>();</span><br></pre></td></tr></table></figure>
<ul>
<li>在这个例子中，SuperType构造函数定义了两个属性： name和colors。SuperType的原型定义了一个方法sayName。SubType构造函数在调用SuperType传入参数name同时定义了自己的属性age；通过原型继承了SuperType的方法sayName，而后在SubType自己的原型上多定义了自己的一个方法sayAge。这样就可以让两个不同的实例分别拥有自己的属性，又可以使用相同的方法了。</li>
<li>instanceof和isPrototypeOf()能够用于识别基于组合继承创建的对象。</li>
</ul>
<h3 id="4-寄生式继承"><a href="#4-寄生式继承" class="headerlink" title="4. 寄生式继承"></a>4. 寄生式继承</h3><p>寄生式继承是与原型式继承思路相关的一种继承方式。创建一个用于封装继承过程的函数，该函数在内部以某种方式新建对象并增强对象的属性方法，最后再返回该新建的对象。</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">createAnother</span>(<span class="params">obj</span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> clone = <span class="title class_">Object</span>(obj);</span><br><span class="line">    clone.<span class="property">sayHi</span> = <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;hi&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> clone;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> person = &#123;</span><br><span class="line">    <span class="attr">name</span>: <span class="string">&#x27;xyg&#x27;</span>,</span><br><span class="line">    <span class="attr">friends</span>: [<span class="string">&#x27;a&#x27;</span>, <span class="string">&#x27;b&#x27;</span>, <span class="string">&#x27;c&#x27;</span>]</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> anotherPerson = <span class="title function_">createAnother</span>(person);</span><br><span class="line">anotherPerson.<span class="title function_">sayHi</span>();</span><br></pre></td></tr></table></figure>

<h3 id="5-寄生组合式继承"><a href="#5-寄生组合式继承" class="headerlink" title="5. 寄生组合式继承"></a>5. 寄生组合式继承</h3><p>上文提到的组合继承有不足之处，就是无论什么情况下都会调用两次父类型构造函数：一次是在创建子类型原型的时候，另一次是在子类构造函数内部。</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 先来看组合式继承的缺陷</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">SuperType</span>(<span class="params">name</span>) &#123;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">name</span> = name;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">colors</span> = [<span class="string">&#x27;red&#x27;</span>, <span class="string">&#x27;blue&#x27;</span>, <span class="string">&#x27;green&#x27;</span>];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title class_">SuperType</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">sayName</span> = <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">this</span>.<span class="property">name</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">SubType</span>(<span class="params">name, age</span>)&#123;</span><br><span class="line">    <span class="title class_">SuperType</span>.<span class="title function_">call</span>(<span class="variable language_">this</span>, name); <span class="comment">// 第二次调用SuperType()</span></span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">age</span> = age;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title class_">SubType</span>.<span class="property"><span class="keyword">prototype</span></span> = <span class="keyword">new</span> <span class="title class_">SuperType</span>(); <span class="comment">// 第一次调用SuperType()</span></span><br><span class="line"><span class="title class_">SubType</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">constructor</span> = <span class="title class_">SubType</span>;</span><br><span class="line"><span class="title class_">SubType</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">sayAge</span> = <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">this</span>.<span class="property">age</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<ul>
<li>第一次调用SuperType构造函数时，SubType.prototype会得到两个属性： name和colors</li>
<li>第二次调用SubType时，SubType内部会再次调用SuperType构造函数，又会在新对象的原型上创建了实例属性name和colors，这两个实例属性就会屏蔽原型中的两个同名属性</li>
</ul>
<p>寄生组合式继承</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">inheritPrototype</span>(<span class="params">subType, superType</span>) &#123;</span><br><span class="line">    <span class="keyword">let</span> prototype = <span class="title class_">Object</span>(superType.<span class="property"><span class="keyword">prototype</span></span>);  <span class="comment">//  创建对象</span></span><br><span class="line">    prototype.<span class="property">constructor</span> = subType;    <span class="comment">//  增强对象</span></span><br><span class="line">    subType.<span class="property"><span class="keyword">prototype</span></span> = prototype;  <span class="comment">//  指定对象</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">SuperType</span>(<span class="params">name</span>) &#123;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">name</span> = name;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">colors</span> = [<span class="string">&#x27;red&#x27;</span>, <span class="string">&#x27;blue&#x27;</span>, <span class="string">&#x27;green&#x27;</span>];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title class_">SuperType</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">sayName</span> = <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">this</span>.<span class="property">name</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">SubType</span>(<span class="params">name, age</span>) &#123;</span><br><span class="line">    <span class="title class_">SuperType</span>.<span class="title function_">call</span>(<span class="variable language_">this</span>, name);</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">age</span> = age;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title function_">inheritPrototype</span>(<span class="title class_">SubType</span>, <span class="title class_">SuperType</span>);</span><br><span class="line"></span><br><span class="line"><span class="title class_">SubType</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">sayAge</span> = <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">this</span>.<span class="property">age</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> instance1 = <span class="keyword">new</span> <span class="title class_">SubType</span>(<span class="string">&#x27;xyg&#x27;</span>, <span class="number">24</span>);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(instance1.<span class="property">name</span>);        <span class="comment">//  xyg</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(instance1.<span class="property">colors</span>);      <span class="comment">//  [&#x27;red&#x27;, &#x27;blue&#x27;, &#x27;green&#x27;]</span></span><br><span class="line">instance1.<span class="title function_">sayAge</span>();                 <span class="comment">// 24</span></span><br><span class="line">instance1.<span class="title function_">sayName</span>();                <span class="comment">//  &#x27;xyg&#x27;</span></span><br></pre></td></tr></table></figure>
<ul>
<li>相比组合式继承，寄生组合式继承的改变是：将父类构造函数的原型副本赋值给子类构造函数的原型，这样子类就可以继承父类的方法。</li>
<li>new 子类构造函数生成实例时就只调用一次父类构造函数，原型上的name和colors没有屏蔽一说。</li>
</ul>
]]></content>
      <categories>
        <category>前端</category>
      </categories>
      <tags>
        <tag>JavaScript</tag>
      </tags>
  </entry>
  <entry>
    <title>ES6简单set结构实现</title>
    <url>/p/55133c6b/</url>
    <content><![CDATA[<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">mySet</span>&#123;</span><br><span class="line">	<span class="title function_">constructor</span>(<span class="params">obj</span>)&#123;</span><br><span class="line">		<span class="variable language_">this</span>.<span class="property">obj</span> = &#123;&#125;</span><br><span class="line">		<span class="variable language_">this</span>.<span class="property">length</span> = <span class="number">0</span></span><br><span class="line">		<span class="keyword">if</span>(<span class="title class_">Array</span>.<span class="title function_">isArray</span>(obj))&#123;</span><br><span class="line">			<span class="keyword">for</span>(<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; obj.<span class="property">length</span>; i++)&#123;</span><br><span class="line">				<span class="variable language_">this</span>.<span class="property">obj</span>[<span class="variable language_">this</span>.<span class="property">length</span>] = obj[i]</span><br><span class="line">					<span class="variable language_">this</span>.<span class="property">length</span>++</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;<span class="keyword">else</span> <span class="keyword">if</span>(<span class="title function_">typeof</span>(obj) === <span class="title class_">String</span>)&#123;</span><br><span class="line">			obj = obj.<span class="title function_">split</span>(<span class="string">&#x27;&#x27;</span>)</span><br><span class="line">			<span class="keyword">for</span>(<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; obj.<span class="property">length</span>; i++)&#123;</span><br><span class="line">				<span class="variable language_">this</span>.<span class="property">obj</span>[<span class="variable language_">this</span>.<span class="property">length</span>] = obj[i]</span><br><span class="line">				<span class="variable language_">this</span>.<span class="property">length</span>++</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">    <span class="title function_">has</span>(<span class="params">value</span>)&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">obj</span>.<span class="title function_">hasOwnProperty</span>(value)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="title function_">add</span>(<span class="params">value</span>)&#123;</span><br><span class="line">        <span class="keyword">if</span>(!<span class="variable language_">this</span>.<span class="title function_">has</span>(value))&#123;</span><br><span class="line">            <span class="variable language_">this</span>.<span class="property">obj</span>[value] = value</span><br><span class="line">            <span class="variable language_">this</span>.<span class="property">length</span>++</span><br><span class="line">            <span class="keyword">return</span> <span class="variable language_">this</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="title function_">del</span>(<span class="params">value</span>)&#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">this</span>.<span class="title function_">has</span>(value));</span><br><span class="line">        <span class="keyword">if</span>(<span class="variable language_">this</span>.<span class="title function_">has</span>(value))&#123;</span><br><span class="line">            <span class="keyword">delete</span> <span class="variable language_">this</span>.<span class="property">obj</span>[value]</span><br><span class="line">            <span class="variable language_">this</span>.<span class="property">length</span>--</span><br><span class="line">            <span class="keyword">return</span> <span class="variable language_">this</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="title function_">clear</span>(<span class="params"></span>)&#123;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">obj</span> = &#123;&#125;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">length</span> = <span class="number">0</span></span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">this</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="title function_">size</span>(<span class="params"></span>)&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">length</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="title function_">keys</span>(<span class="params"></span>)&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="title class_">Object</span>.<span class="title function_">keys</span>(<span class="variable language_">this</span>.<span class="property">obj</span>)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="title function_">values</span>(<span class="params"></span>)&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="title class_">Object</span>.<span class="title function_">values</span>(<span class="variable language_">this</span>.<span class="property">obj</span>)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="title function_">entries</span>(<span class="params"></span>)&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="title class_">Object</span>.<span class="title function_">entries</span>(<span class="variable language_">this</span>.<span class="property">obj</span>)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">// 这里偷懒用现成的Set结构</span></span><br><span class="line">    <span class="title function_">union</span>(<span class="params">otherSet</span>)&#123;</span><br><span class="line">        <span class="keyword">let</span> newSet = <span class="keyword">new</span> <span class="title class_">Set</span>()</span><br><span class="line">        <span class="keyword">let</span> values = <span class="variable language_">this</span>.<span class="title function_">values</span>()</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; values.<span class="property">length</span>; i++)&#123;</span><br><span class="line">            newSet.<span class="title function_">add</span>(values[i])</span><br><span class="line">        &#125;</span><br><span class="line">        values = otherSet.<span class="title function_">values</span>()</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; values.<span class="property">length</span>; i++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(!<span class="variable language_">this</span>.<span class="title function_">has</span>(values[i]))&#123;</span><br><span class="line">                newSet.<span class="title function_">add</span>(values[i])</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> newSet</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="title function_">intersection</span>(<span class="params">otherSet</span>)&#123;</span><br><span class="line">        <span class="keyword">let</span> newSet = <span class="keyword">new</span> <span class="title class_">Set</span>()</span><br><span class="line">        <span class="keyword">let</span> values = <span class="variable language_">this</span>.<span class="property">values</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; values.<span class="property">length</span>; i++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(otherSet.<span class="title function_">has</span>(values[i]))&#123;</span><br><span class="line">                newSet.<span class="title function_">add</span>(values[i])</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> newSet</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="title function_">difference</span>(<span class="params">otherSet</span>)&#123;</span><br><span class="line">        <span class="keyword">let</span> newSet = <span class="keyword">new</span> <span class="title class_">Set</span>()</span><br><span class="line">        <span class="keyword">let</span> values = otherSet.<span class="title function_">values</span>()</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; values.<span class="property">length</span>; i++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(!<span class="variable language_">this</span>.<span class="title function_">has</span>(values[i]))&#123;</span><br><span class="line">                newSet.<span class="title function_">add</span>(values[i])</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> newSet</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> myset = <span class="keyword">new</span> <span class="title function_">mySet</span>([<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>])</span><br><span class="line"><span class="comment">// myset.delete(&#123;a: 1, b: 2&#125;)</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(myset.<span class="title function_">union</span>(<span class="keyword">new</span> <span class="title function_">mySet</span>([<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>])));</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> set = <span class="keyword">new</span> <span class="title class_">Set</span>()</span><br><span class="line">set.<span class="title function_">add</span>(<span class="number">5</span>)</span><br><span class="line">set.<span class="title function_">add</span>(<span class="number">4</span>)</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(set);</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>前端</category>
      </categories>
      <tags>
        <tag>JavaScript</tag>
      </tags>
  </entry>
  <entry>
    <title>JS轮播图</title>
    <url>/p/1355175c/</url>
    <content><![CDATA[<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// html部分</span></span><br><span class="line">&lt;div id=<span class="string">&quot;banner&quot;</span>&gt;</span><br><span class="line">    &lt;ul id=&quot;imagesL&quot;&gt;</span><br><span class="line">        &lt;li&gt;&lt;a href=&quot;#&quot;&gt;&lt;img src=&quot;images/image01.JPG&quot; alt=&quot;&quot;&gt;&lt;/a&gt;&lt;/li&gt;</span><br><span class="line">        &lt;li&gt;&lt;a href=&quot;#&quot;&gt;&lt;img src=&quot;images/image02.JPG&quot; alt=&quot;&quot;&gt;&lt;/a&gt;&lt;/li&gt;</span><br><span class="line">        &lt;li&gt;&lt;a href=&quot;#&quot;&gt;&lt;img src=&quot;images/image03.JPG&quot; alt=&quot;&quot;&gt;&lt;/a&gt;&lt;/li&gt;</span><br><span class="line">        &lt;li&gt;&lt;a href=&quot;#&quot;&gt;&lt;img src=&quot;images/image04.JPG&quot; alt=&quot;&quot;&gt;&lt;/a&gt;&lt;/li&gt;</span><br><span class="line">        &lt;li&gt;&lt;a href=&quot;#&quot;&gt;&lt;img src=&quot;images/image05.JPG&quot; alt=&quot;&quot;&gt;&lt;/a&gt;&lt;/li&gt;</span><br><span class="line">        &lt;li&gt;&lt;a href=&quot;#&quot;&gt;&lt;img src=&quot;images/image01.JPG&quot; alt=&quot;&quot;&gt;&lt;/a&gt;&lt;/li&gt;</span><br><span class="line">    &lt;/ul&gt;</span><br><span class="line">    &lt;div id=&quot;nav&quot;&gt;</span><br><span class="line">        &lt;a href=&quot;#&quot;&gt;&lt;/a&gt;</span><br><span class="line">        &lt;a href=&quot;#&quot;&gt;&lt;/a&gt;</span><br><span class="line">        &lt;a href=&quot;#&quot;&gt;&lt;/a&gt;</span><br><span class="line">        &lt;a href=&quot;#&quot;&gt;&lt;/a&gt;</span><br><span class="line">        &lt;a href=&quot;#&quot;&gt;&lt;/a&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">    &lt;span id=&quot;prev&quot;&gt;&amp;lt;&lt;/span&gt;</span><br><span class="line">    &lt;span id=&quot;next&quot;&gt;&amp;gt;&lt;/span&gt;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure>
<span id="more"></span>

<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// css部分</span></span><br><span class="line">*&#123;</span><br><span class="line">    <span class="attr">margin</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attr">padding</span>: <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">html&#123;</span><br><span class="line">    font-<span class="attr">size</span>: 10px;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">#banner&#123;</span><br><span class="line">    <span class="attr">width</span>: 40rem;</span><br><span class="line">    <span class="attr">height</span>: 50rem;</span><br><span class="line">    <span class="attr">position</span>: relative;</span><br><span class="line">    <span class="attr">margin</span>: <span class="number">0</span> auto;</span><br><span class="line">    margin-<span class="attr">top</span>: 10rem;</span><br><span class="line">    <span class="attr">overflow</span>: hidden;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">#imagesL&#123;</span><br><span class="line">    list-<span class="attr">style</span>: none;</span><br><span class="line">	<span class="attr">position</span>: absolute;</span><br><span class="line">	<span class="attr">left</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attr">width</span>: 240rem;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">#imagesL li&#123;</span><br><span class="line">    <span class="attr">float</span>: left;</span><br><span class="line">    <span class="attr">width</span>: 40rem;</span><br><span class="line">    <span class="attr">height</span>: 50rem;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">#imagesL li img&#123;</span><br><span class="line">    <span class="attr">width</span>: <span class="number">100</span>%;</span><br><span class="line">    <span class="attr">height</span>: <span class="number">100</span>%;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">#nav&#123;</span><br><span class="line">    <span class="attr">position</span>: absolute;</span><br><span class="line">    <span class="attr">left</span>: 15rem;</span><br><span class="line">    <span class="attr">bottom</span>: 2rem;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">#nav a&#123;</span><br><span class="line">    <span class="attr">float</span>: left;</span><br><span class="line">    <span class="attr">width</span>: 1rem;</span><br><span class="line">    <span class="attr">height</span>: 1rem;</span><br><span class="line">    border-<span class="attr">radius</span>: <span class="number">50</span>%;</span><br><span class="line">    margin-<span class="attr">right</span>: 1rem;</span><br><span class="line">    box-<span class="attr">shadow</span>: <span class="number">0.</span>5rem <span class="number">0.</span>5rem <span class="number">0.</span>5rem <span class="title function_">rgba</span>(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0.5</span>);</span><br><span class="line">    box-<span class="attr">sizing</span>: border-box;</span><br><span class="line">    <span class="attr">border</span>: 1px solid #fff;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.<span class="property">a_color</span>&#123;</span><br><span class="line">    background-<span class="attr">color</span>: skyblue;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">#prev&#123;</span><br><span class="line">    <span class="attr">position</span>: absolute;</span><br><span class="line">    <span class="attr">left</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attr">top</span>: <span class="number">50</span>%;</span><br><span class="line">    <span class="attr">transform</span>: <span class="title function_">translateY</span>(-<span class="number">50</span>%);</span><br><span class="line">    <span class="attr">width</span>: 3rem;</span><br><span class="line">    <span class="attr">height</span>: 5rem;</span><br><span class="line">    text-<span class="attr">align</span>: center;</span><br><span class="line">    line-<span class="attr">height</span>: 5rem;</span><br><span class="line">    <span class="attr">color</span>: <span class="title function_">rgba</span>(<span class="number">255</span>,<span class="number">255</span>,<span class="number">255</span>,<span class="number">0.7</span>);</span><br><span class="line">    font-<span class="attr">size</span>: x-large;</span><br><span class="line">    font-<span class="attr">weight</span>: bold;</span><br><span class="line">    background-<span class="attr">color</span>: <span class="title function_">rgba</span>(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0.4</span>);</span><br><span class="line">    <span class="attr">display</span>: none;</span><br><span class="line">    <span class="attr">cursor</span>: pointer;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">#next&#123;</span><br><span class="line">    <span class="attr">position</span>: absolute;</span><br><span class="line">    <span class="attr">right</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attr">top</span>: <span class="number">50</span>%;</span><br><span class="line">    <span class="attr">transform</span>: <span class="title function_">translateY</span>(-<span class="number">50</span>%);</span><br><span class="line">    <span class="attr">width</span>: 3rem;</span><br><span class="line">    <span class="attr">height</span>: 5rem;</span><br><span class="line">    text-<span class="attr">align</span>: center;</span><br><span class="line">    line-<span class="attr">height</span>: 5rem;</span><br><span class="line">    <span class="attr">color</span>: <span class="title function_">rgba</span>(<span class="number">255</span>,<span class="number">255</span>,<span class="number">255</span>,<span class="number">0.7</span>);</span><br><span class="line">    font-<span class="attr">size</span>: x-large;</span><br><span class="line">    font-<span class="attr">weight</span>: bold;</span><br><span class="line">    background-<span class="attr">color</span>: <span class="title function_">rgba</span>(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0.4</span>);</span><br><span class="line">    <span class="attr">display</span>: none;</span><br><span class="line">    <span class="attr">cursor</span>: pointer;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// js部分</span></span><br><span class="line"><span class="keyword">let</span> banner = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;banner&#x27;</span>)</span><br><span class="line"><span class="keyword">let</span> ul = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;imagesL&#x27;</span>)</span><br><span class="line"><span class="keyword">let</span> ul_width = ul.<span class="property">offsetWidth</span></span><br><span class="line"><span class="keyword">let</span> li_count = ul.<span class="property">children</span>.<span class="property">length</span></span><br><span class="line"><span class="keyword">let</span> li_width = ul.<span class="property">children</span>[<span class="number">0</span>].<span class="property">offsetWidth</span></span><br><span class="line"><span class="keyword">let</span> dot_a = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;nav&#x27;</span>).<span class="property">children</span></span><br><span class="line">	dot_a[<span class="number">0</span>].<span class="property">classList</span>.<span class="title function_">add</span>(<span class="string">&#x27;a_color&#x27;</span>)</span><br><span class="line"><span class="keyword">let</span> prev = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;prev&#x27;</span>)</span><br><span class="line"><span class="keyword">let</span> next = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;next&#x27;</span>)</span><br><span class="line"><span class="keyword">let</span> index = <span class="number">0</span></span><br><span class="line"><span class="keyword">let</span> timer = <span class="literal">null</span></span><br><span class="line"><span class="keyword">let</span> bool = <span class="literal">true</span> <span class="comment">// 解决左右连击轮播问题</span></span><br><span class="line"></span><br><span class="line"><span class="variable language_">window</span>.<span class="property">onfocus</span> = <span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">    <span class="keyword">function</span> <span class="title function_">animate</span>(<span class="params">element, target</span>)&#123;</span><br><span class="line">        <span class="keyword">let</span> step = <span class="number">10</span></span><br><span class="line">        step = (<span class="title class_">Math</span>.<span class="title function_">abs</span>(element.<span class="property">offsetLeft</span>) &lt; <span class="title class_">Math</span>.<span class="title function_">abs</span>(target))? -step : step</span><br><span class="line">        <span class="keyword">let</span> ani_timer = <span class="built_in">setInterval</span>(<span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">            element.<span class="property">style</span>.<span class="property">left</span> = element.<span class="property">offsetLeft</span> + step + <span class="string">&#x27;px&#x27;</span></span><br><span class="line">            bool = <span class="literal">false</span></span><br><span class="line">            <span class="keyword">if</span>(<span class="title class_">Math</span>.<span class="title function_">abs</span>(target - element.<span class="property">offsetLeft</span>) &lt;=  <span class="title class_">Math</span>.<span class="title function_">abs</span>(step))&#123;</span><br><span class="line">                element.<span class="property">style</span>.<span class="property">left</span> = target + <span class="string">&#x27;px&#x27;</span></span><br><span class="line">                bool = <span class="literal">true</span></span><br><span class="line">                <span class="built_in">clearInterval</span>(ani_timer)</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;, <span class="number">15</span>)</span><br><span class="line">        <span class="title function_">go</span>()</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// animate(ul, -400)</span></span><br><span class="line">    next.<span class="property">onclick</span> = <span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">        <span class="built_in">clearInterval</span>(timer)</span><br><span class="line">        <span class="keyword">if</span>(bool)&#123;</span><br><span class="line">            index += <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">if</span>(index === li_count)&#123;</span><br><span class="line">                index = <span class="number">1</span></span><br><span class="line">                ul.<span class="property">style</span>.<span class="property">left</span> = <span class="number">0</span> + <span class="string">&#x27;px&#x27;</span></span><br><span class="line">            &#125;</span><br><span class="line">            <span class="title function_">animate</span>(ul, -li_width * index)</span><br><span class="line">            <span class="title function_">getStyle</span>(dot_a, index, li_count)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    next.<span class="property">onmouseover</span> = <span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">        <span class="built_in">clearInterval</span>(timer)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    prev.<span class="property">onclick</span> = <span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">        <span class="built_in">clearInterval</span>(timer)</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(index);</span><br><span class="line">        <span class="keyword">if</span>(bool)&#123;</span><br><span class="line">            index -= <span class="number">1</span></span><br><span class="line">            <span class="keyword">if</span>(index === -<span class="number">1</span>)&#123;</span><br><span class="line">                index = <span class="number">4</span></span><br><span class="line">                ul.<span class="property">style</span>.<span class="property">left</span> = -<span class="number">2000</span> + <span class="string">&#x27;px&#x27;</span></span><br><span class="line">                <span class="comment">// animate(ul, li_width * index) // -2000</span></span><br><span class="line">            &#125;</span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">log</span>(index);</span><br><span class="line">            <span class="title function_">animate</span>(ul, -li_width * index)</span><br><span class="line">            <span class="title function_">getStyle</span>(dot_a, index, li_count)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    prev.<span class="property">onmouseout</span> = <span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">        <span class="built_in">clearInterval</span>(timer)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">function</span> <span class="title function_">go</span>(<span class="params"></span>)&#123;</span><br><span class="line">        <span class="built_in">clearInterval</span>(timer)</span><br><span class="line">        timer = <span class="built_in">setInterval</span>(<span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">            <span class="built_in">clearInterval</span>(timer)</span><br><span class="line">            index += <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">if</span>(index === li_count)&#123;</span><br><span class="line">                index = <span class="number">1</span></span><br><span class="line">                ul.<span class="property">style</span>.<span class="property">left</span> = <span class="number">0</span> + <span class="string">&#x27;px&#x27;</span></span><br><span class="line">            &#125;</span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">log</span>(-li_width * index);</span><br><span class="line">            <span class="title function_">animate</span>(ul, -li_width * index)</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 抽离</span></span><br><span class="line">            <span class="comment">// for(let i = 0; i &lt; dot_a.length; i++)&#123;</span></span><br><span class="line">            <span class="comment">//     dot_a[i].classList.remove(&#x27;a_color&#x27;)</span></span><br><span class="line">            <span class="comment">// &#125;</span></span><br><span class="line">            <span class="comment">// if(index === li_count - 1)&#123;</span></span><br><span class="line">            <span class="comment">//     dot_a[0].classList.add(&#x27;a_color&#x27;)</span></span><br><span class="line">            <span class="comment">// &#125;else&#123;</span></span><br><span class="line">            <span class="comment">//     dot_a[index].classList.add(&#x27;a_color&#x27;)</span></span><br><span class="line">            <span class="comment">// &#125;</span></span><br><span class="line">            <span class="title function_">getStyle</span>(dot_a, index, li_count)</span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">log</span>(index);</span><br><span class="line">        &#125;, <span class="number">2000</span>)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="title function_">go</span>()</span><br><span class="line"></span><br><span class="line">    <span class="keyword">function</span> <span class="title function_">getStyle</span>(<span class="params">eleArr, index, li_Count</span>)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; eleArr.<span class="property">length</span>; i++)&#123;</span><br><span class="line">            eleArr[i].<span class="property">classList</span>.<span class="title function_">remove</span>(<span class="string">&#x27;a_color&#x27;</span>)</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(index === li_Count - <span class="number">1</span>)&#123;</span><br><span class="line">            eleArr[<span class="number">0</span>].<span class="property">classList</span>.<span class="title function_">add</span>(<span class="string">&#x27;a_color&#x27;</span>)</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            eleArr[index].<span class="property">classList</span>.<span class="title function_">add</span>(<span class="string">&#x27;a_color&#x27;</span>)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; dot_a.<span class="property">length</span>; i++)&#123;</span><br><span class="line">        dot_a[i].<span class="property">onclick</span> = <span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">            <span class="built_in">clearInterval</span>(timer)</span><br><span class="line">            index = i;</span><br><span class="line">            ul.<span class="property">style</span>.<span class="property">left</span> = -li_width * index + <span class="string">&#x27;px&#x27;</span></span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">log</span>(-li_width * index);</span><br><span class="line">            <span class="title function_">getStyle</span>(dot_a, index, li_count)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    banner.<span class="property">onmouseover</span> = <span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">        <span class="built_in">clearInterval</span>(timer)</span><br><span class="line">        prev.<span class="property">style</span>.<span class="property">display</span> = <span class="string">&#x27;block&#x27;</span></span><br><span class="line">        next.<span class="property">style</span>.<span class="property">display</span> = <span class="string">&#x27;block&#x27;</span></span><br><span class="line">    &#125;</span><br><span class="line">    banner.<span class="property">onmouseout</span> = <span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">        <span class="built_in">clearInterval</span>(timer)</span><br><span class="line">        <span class="title function_">go</span>()</span><br><span class="line">        prev.<span class="property">style</span>.<span class="property">display</span> = <span class="string">&#x27;none&#x27;</span></span><br><span class="line">        next.<span class="property">style</span>.<span class="property">display</span> = <span class="string">&#x27;none&#x27;</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable language_">window</span>.<span class="property">onblur</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">	<span class="built_in">clearInterval</span>(timer)</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>前端</category>
      </categories>
      <tags>
        <tag>JavaScript</tag>
      </tags>
  </entry>
  <entry>
    <title>git常用命令</title>
    <url>/p/423abe9e/</url>
    <content><![CDATA[<p><img data-src="https://img-blog.csdnimg.cn/10f76f5f0d4143d2a4b4ec275a8f28ac.png" alt="git工作流程图"></p>
<h3 id="1-新建代码库"><a href="#1-新建代码库" class="headerlink" title="1. 新建代码库"></a>1. 新建代码库</h3><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 在当前目录新建一个Git代码库</span></span><br><span class="line">git init</span><br><span class="line"></span><br><span class="line"><span class="comment">// 下载一个项目和它的整个代码历史</span></span><br><span class="line">git clone [url]</span><br></pre></td></tr></table></figure>

<h3 id="2-配置"><a href="#2-配置" class="headerlink" title="2. 配置"></a>2. 配置</h3><p>git的设置文件为.gitconfig</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 显示当前的Git配置</span></span><br><span class="line">$ git config --list</span><br><span class="line"></span><br><span class="line"><span class="comment">// 编辑Git配置文件</span></span><br><span class="line">$ git config -e [--<span class="variable language_">global</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment">// 设置提交代码时的用户信息</span></span><br><span class="line">$ git config --<span class="variable language_">global</span> user.<span class="property">name</span> <span class="string">&quot;[name]&quot;</span></span><br><span class="line">$ git config --<span class="variable language_">global</span> user.<span class="property">email</span> <span class="string">&quot;[email address]&quot;</span></span><br></pre></td></tr></table></figure>

<h3 id="3-增加or删除文件"><a href="#3-增加or删除文件" class="headerlink" title="3. 增加or删除文件"></a>3. 增加or删除文件</h3><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 添加指定文件到暂存区</span></span><br><span class="line">git add [file1] [file2] ...</span><br><span class="line"></span><br><span class="line"><span class="comment">// 添加指定目录到暂存区， 包括子目录</span></span><br><span class="line">git add [dir]</span><br><span class="line"></span><br><span class="line"><span class="comment">// 添加所有文件到暂存区</span></span><br><span class="line">git add .</span><br><span class="line"></span><br><span class="line"><span class="comment">// 删除工作区文件，并且将这次删除放入暂存区</span></span><br><span class="line">git rm [file1 [file2]] ...</span><br><span class="line"></span><br><span class="line"><span class="comment">// 改名文件， 并且将这个改名放入暂存区</span></span><br><span class="line">git mv [file-original] [file-renamed]</span><br><span class="line"></span><br><span class="line"><span class="comment">// 删除暂存区里的文件</span></span><br><span class="line">git rm --cache [file]</span><br><span class="line"></span><br><span class="line"><span class="comment">// 删除暂存区和工作区的文件</span></span><br><span class="line">git rm -f [file]</span><br></pre></td></tr></table></figure>

<h3 id="4-代码提交"><a href="#4-代码提交" class="headerlink" title="4. 代码提交"></a>4. 代码提交</h3><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 提交暂存区到仓库区</span></span><br><span class="line">git commit -m [description]</span><br><span class="line"></span><br><span class="line"><span class="comment">// 提交暂存区的指定文件到仓库区</span></span><br><span class="line">git commit [file1] [file2] ... -m [description]</span><br><span class="line"></span><br><span class="line"><span class="comment">// 提交工作区自上次commit之后的变化，到仓库区</span></span><br><span class="line">git commit -a</span><br></pre></td></tr></table></figure>

<h3 id="5-撤销"><a href="#5-撤销" class="headerlink" title="5. 撤销"></a>5. 撤销</h3><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 恢复暂存区的指定文件到工作区</span></span><br><span class="line">git checkout [file]</span><br><span class="line"></span><br><span class="line"><span class="comment">// 恢复暂存区的所有文件到工作区</span></span><br><span class="line">git checkout .</span><br><span class="line"></span><br><span class="line"><span class="comment">// 恢复某个commit的指定文件到暂存区和工作区</span></span><br><span class="line">git checkout [commit] [file]</span><br><span class="line"></span><br><span class="line"><span class="comment">// 重置暂存区的指定文件，与上一次commit保持一致，但工作区不变</span></span><br><span class="line">git reset [file]</span><br><span class="line"></span><br><span class="line"><span class="comment">// 重置暂存区与工作区，与上一次commit保持一致</span></span><br><span class="line">git reset --hard</span><br><span class="line"></span><br><span class="line"><span class="comment">// 重置当前分支的指针为指定commit，同时重置暂存区，但工作区不变</span></span><br><span class="line">git reset [commit]</span><br><span class="line"></span><br><span class="line"><span class="comment">// 重置当前分支的HEAD为指定commit，同时重置暂存区和工作区，与指定commit一致</span></span><br><span class="line">git reset --hard [commit]</span><br><span class="line"></span><br><span class="line"><span class="comment">// 重置当前HEAD为指定commit，但保持暂存区和工作区不变</span></span><br><span class="line">git reset --keep [commit]</span><br></pre></td></tr></table></figure>

<h3 id="6-分支"><a href="#6-分支" class="headerlink" title="6. 分支"></a>6. 分支</h3><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 列出所有本地分支</span></span><br><span class="line">git branch</span><br><span class="line"></span><br><span class="line"><span class="comment">// 列出所有远程分支</span></span><br><span class="line">git branch -r</span><br><span class="line"></span><br><span class="line"><span class="comment">// 列出所有本地分支和远程分支</span></span><br><span class="line">git branch -a</span><br><span class="line"></span><br><span class="line"><span class="comment">// 新建一个分支，但依然停留在当前分支</span></span><br><span class="line">git branch [branch-name]</span><br><span class="line"></span><br><span class="line"><span class="comment">// 新建一个分支，并切换到该分支</span></span><br><span class="line">git checkout -b [branch]</span><br><span class="line"></span><br><span class="line"><span class="comment">// 新建一个分支，指向指定commit</span></span><br><span class="line">git branch [branch] [commit]</span><br><span class="line"></span><br><span class="line"><span class="comment">// 切换到指定分支，并更新工作区</span></span><br><span class="line">git checkout [branch-name]</span><br><span class="line"></span><br><span class="line"><span class="comment">// 切换到上一个分支</span></span><br><span class="line">git checkout -</span><br><span class="line"></span><br><span class="line"><span class="comment">// 合并指定分支到当前分支</span></span><br><span class="line">git merga [branch]</span><br><span class="line"></span><br><span class="line"><span class="comment">// 删除分支</span></span><br><span class="line">git branch -d [branch-name]</span><br></pre></td></tr></table></figure>

<h3 id="7-查看信息"><a href="#7-查看信息" class="headerlink" title="7.查看信息"></a>7.查看信息</h3><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 显示有变更的文件</span></span><br><span class="line">git status</span><br><span class="line"></span><br><span class="line"><span class="comment">// 显示当前分支版本</span></span><br><span class="line">git log</span><br><span class="line"></span><br><span class="line"><span class="comment">// 显示commit历史，以及每次commit发生变更的文件</span></span><br><span class="line">git log --stat</span><br><span class="line"></span><br><span class="line"><span class="comment">// 显示过去5次提交</span></span><br><span class="line">git log -<span class="number">5</span> --pretty --oneline</span><br><span class="line"></span><br><span class="line"><span class="comment">// 显示暂存区和工作区的差异</span></span><br><span class="line">git diff</span><br><span class="line"></span><br><span class="line"><span class="comment">// 显示暂存区和上一个commit的差异</span></span><br><span class="line">git diff --cached [file]</span><br><span class="line"></span><br><span class="line"><span class="comment">// 显示工作区与当前分支最新commit之间的差异</span></span><br><span class="line">git diff <span class="variable constant_">HEAD</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 显示两次提交之间的差异</span></span><br><span class="line">git diff [first-branch]...[second-branch]</span><br><span class="line"></span><br><span class="line"><span class="comment">// 显示当前分支的最近几次提交</span></span><br><span class="line">git reflog</span><br></pre></td></tr></table></figure>

<h3 id="8-远程同步"><a href="#8-远程同步" class="headerlink" title="8. 远程同步"></a>8. 远程同步</h3><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 下载远程仓库的所有变动</span></span><br><span class="line">git fetch [remote]</span><br><span class="line"></span><br><span class="line"><span class="comment">// 显示所有远程仓库</span></span><br><span class="line">git remote -v</span><br><span class="line"></span><br><span class="line"><span class="comment">// 显示某个远程仓库的信息</span></span><br><span class="line">git remote show [remote]</span><br><span class="line"></span><br><span class="line"><span class="comment">// 增加一个新的远程仓库，并命名</span></span><br><span class="line">git remote add [shortname] [url]</span><br><span class="line"></span><br><span class="line"><span class="comment">// 取回远程仓库的变化，并与本地分支合并</span></span><br><span class="line">git pull [remote] [branch]</span><br><span class="line"></span><br><span class="line"><span class="comment">// 上传本地指定分支到远程仓库</span></span><br><span class="line">git push [remote] [branch]</span><br><span class="line"></span><br><span class="line"><span class="comment">// 强行推送当前分支到远程仓库，即使有冲突</span></span><br><span class="line">git push [remote] --force</span><br><span class="line"></span><br><span class="line"><span class="comment">// 推送所有分支到远程仓库</span></span><br><span class="line">git push [remote] --all</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>前端</category>
      </categories>
      <tags>
        <tag>git</tag>
      </tags>
  </entry>
  <entry>
    <title>jsdelivr被墙,hexo-next切换为自定义CDN</title>
    <url>/p/8ebdba58/</url>
    <content><![CDATA[<h3 id="1-Next主题需要升级到8-9以上，我的是多少忘记了，最好升级到最新"><a href="#1-Next主题需要升级到8-9以上，我的是多少忘记了，最好升级到最新" class="headerlink" title="1. Next主题需要升级到8.9以上，我的是多少忘记了，最好升级到最新"></a>1. Next主题需要升级到8.9以上，我的是多少忘记了，最好升级到最新</h3><ul>
<li>使用npm管理 <figure class="highlight js"><table><tr><td class="code"><pre><span class="line">git clone <span class="attr">https</span>:<span class="comment">//github.com/next-theme/hexo-theme-next themes/next</span></span><br></pre></td></tr></table></figure></li>
</ul>
<h3 id="2-替换链接"><a href="#2-替换链接" class="headerlink" title="2. 替换链接"></a>2. 替换链接</h3><ul>
<li>官方域名替换教程，将 cdn.jsdelivr.net 全局替换成 gcore.jsdelivr.net 可实现访问连通<br>或者将cdn.jsdelivr.net全局替换成 fastly.jsdelivr.net 也可以实现访问连通（这个无失效内容，gcore.jsdelivr.net部分npm资源报错网友提供）</li>
</ul>
<h3 id="3-修改本地-config-next-xml文件"><a href="#3-修改本地-config-next-xml文件" class="headerlink" title="3. 修改本地_config.next.xml文件"></a>3. 修改本地<code>_config.next.xml</code>文件</h3><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="attr">vendors</span>:</span><br><span class="line">  ...</span><br><span class="line">  <span class="attr">plugins</span>: custom</span><br><span class="line">  ...</span><br><span class="line">  <span class="attr">custom_cdn_url</span>: <span class="attr">https</span>:<span class="comment">//fastly.jsdelivr.net/npm/$&#123;npm_name&#125;@$&#123;version&#125;/$&#123;minified&#125;</span></span><br></pre></td></tr></table></figure>
<h3 id="4-修改node-modules下文件夹-waline-hexo-next中的waline-njk"><a href="#4-修改node-modules下文件夹-waline-hexo-next中的waline-njk" class="headerlink" title="4. 修改node_modules下文件夹@waline/hexo-next中的waline.njk"></a>4. 修改node_modules下文件夹@waline/hexo-next中的waline.njk</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line">&#123;&#123; next_data(&#x27;waline&#x27;, &#123;</span><br><span class="line">  lang: page.lang | default(&#x27;zh-CN&#x27;, true)</span><br><span class="line">&#125;, config.waline, &#123;</span><br><span class="line">  el: &#x27;#waline-comments&#x27;,</span><br><span class="line">  libUrl: config.waline.libUrl | default(&#x27;https://fastly.jsdelivr.net/npm/@waline/client/dist/Waline.min.js&#x27;, true),</span><br><span class="line">  path: url_for(page.path) | replace(r/index\.html$/, &#x27;&#x27;)</span><br><span class="line">&#125;) &#125;&#125;</span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="variable language_">document</span>.<span class="title function_">addEventListener</span>(<span class="string">&#x27;page:loaded&#x27;</span>, <span class="function">() =&gt;</span> &#123;</span></span><br><span class="line"><span class="language-javascript">  <span class="title class_">NexT</span>.<span class="property">utils</span>.<span class="title function_">loadComments</span>(<span class="variable constant_">CONFIG</span>.<span class="property">waline</span>.<span class="property">el</span>).<span class="title function_">then</span>(<span class="function">() =&gt;</span> </span></span><br><span class="line"><span class="language-javascript">    <span class="title class_">NexT</span>.<span class="property">utils</span>.<span class="title function_">getScript</span>(<span class="variable constant_">CONFIG</span>.<span class="property">waline</span>.<span class="property">libUrl</span>, &#123; <span class="attr">condition</span>: <span class="variable language_">window</span>.<span class="property">Waline</span> &#125;)</span></span><br><span class="line"><span class="language-javascript">  ).<span class="title function_">then</span>(<span class="function">() =&gt;</span> &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">new</span> <span class="title class_">Waline</span>(<span class="variable constant_">CONFIG</span>.<span class="property">waline</span>);</span></span><br><span class="line"><span class="language-javascript">  &#125;);</span></span><br><span class="line"><span class="language-javascript">&#125;);</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="5-我的博客暂时只需修改这么多，各位看官按自己站点的配置进行相应更改。"><a href="#5-我的博客暂时只需修改这么多，各位看官按自己站点的配置进行相应更改。" class="headerlink" title="5. 我的博客暂时只需修改这么多，各位看官按自己站点的配置进行相应更改。"></a>5. 我的博客暂时只需修改这么多，各位看官按自己站点的配置进行相应更改。</h3>]]></content>
      <categories>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
        <tag>Next</tag>
      </tags>
  </entry>
  <entry>
    <title>修改NexT8.x主题全局样式</title>
    <url>/p/14ba00d2/</url>
    <content><![CDATA[<h3 id="1-全局样式设置"><a href="#1-全局样式设置" class="headerlink" title="1. 全局样式设置"></a>1. 全局样式设置</h3><ul>
<li>在source文件夹下新建.styl结尾的文件，我的是variables.styl，代码如下： <figure class="highlight css"><table><tr><td class="code"><pre><span class="line">$<span class="selector-tag">body</span>-bg-<span class="attribute">color</span> = <span class="selector-id">#eee</span>;</span><br><span class="line">$<span class="attribute">content</span>-bg-<span class="attribute">color</span> = <span class="selector-id">#fff</span>;</span><br><span class="line">$card-bg-<span class="attribute">color</span> = <span class="selector-id">#f5f5f5</span>;</span><br><span class="line">$text-<span class="attribute">color</span> = <span class="selector-id">#555</span>;</span><br><span class="line">$<span class="selector-tag">blockquote</span>-<span class="attribute">color</span> = <span class="selector-id">#666</span>;</span><br><span class="line">$link-<span class="attribute">color</span> = <span class="selector-id">#555</span>;</span><br><span class="line">$link-hover-<span class="attribute">color</span> = <span class="selector-id">#fc9d9a</span>;</span><br><span class="line">$brand-<span class="attribute">color</span> = <span class="selector-id">#fff</span>;</span><br><span class="line">$brand-hover-<span class="attribute">color</span> = <span class="selector-id">#fff</span>;</span><br><span class="line">$<span class="selector-tag">table</span>-row-odd-bg-<span class="attribute">color</span> = <span class="selector-id">#f9f9f9</span>;</span><br><span class="line">$<span class="selector-tag">table</span>-row-hover-bg-<span class="attribute">color</span> = <span class="selector-id">#f5f5f5</span>;</span><br><span class="line">$<span class="selector-tag">menu</span>-item-bg-<span class="attribute">color</span> = <span class="selector-id">#ffe4e1</span>;</span><br><span class="line">$btn-default-bg = <span class="selector-id">#fff</span>;</span><br><span class="line">$btn-default-<span class="attribute">color</span> = <span class="selector-id">#fc9d9a</span>;</span><br><span class="line">$btn-default-<span class="attribute">border-color</span> = <span class="selector-id">#fc9d9a</span>;</span><br><span class="line">$btn-default-hover-bg = <span class="selector-id">#fc9d9a</span>;</span><br><span class="line">$btn-default-hover-<span class="attribute">color</span> = <span class="selector-id">#fff</span>;</span><br><span class="line">$btn-default-hover-<span class="attribute">border-color</span> = <span class="selector-id">#fc9d9a</span>;</span><br></pre></td></tr></table></figure></li>
<li>在_config.next.yml中把<code>custom_file_path</code>配置项中的<code>variable</code>选项的注释去除，重新编译即可生效</li>
</ul>
<h3 id="2-页面样式设置"><a href="#2-页面样式设置" class="headerlink" title="2. 页面样式设置"></a>2. 页面样式设置</h3><ul>
<li>具体选择器名可能版本不同略有不同，可通过<code>hexo s</code>本地运行后在浏览器调试工具中查看，代码如下： <figure class="highlight css"><table><tr><td class="code"><pre><span class="line">// 文章目录链接样式</span><br><span class="line"><span class="selector-class">.sidebar-nav</span> <span class="selector-class">.sidebar-nav-active</span> &#123;</span><br><span class="line">    <span class="attribute">border-bottom-color</span>: <span class="number">#fc9d9a</span>;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#fc9d9a</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.sidebar-nav</span> <span class="selector-class">.sidebar-nav-active</span><span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#fc9d9a</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">a</span>, <span class="selector-tag">span</span><span class="selector-class">.exturl</span> &#123;</span><br><span class="line">    <span class="attribute">border-bottom</span>: none;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.post-toc</span> <span class="selector-class">.nav</span> <span class="selector-class">.active-current</span> &gt; <span class="selector-tag">a</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#fc9d9a</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.post-toc</span> <span class="selector-class">.nav</span> <span class="selector-class">.active</span> &gt; <span class="selector-tag">a</span> &#123;</span><br><span class="line">    <span class="attribute">border-bottom-color</span>: <span class="number">#fc9d9a</span>;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#fc9d9a</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.post-toc</span> <span class="selector-class">.nav</span> <span class="selector-class">.active-current</span> &gt; <span class="selector-tag">a</span><span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#fc9d9a</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">// 顶部黑线</span><br><span class="line"><span class="selector-class">.headband</span> &#123;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#fc9d9a</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">//题头</span><br><span class="line"><span class="selector-class">.site-brand-container</span> &#123;</span><br><span class="line">    <span class="attribute">background</span>: <span class="number">#fc9d9a</span>; </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">// 返回顶部</span><br><span class="line"><span class="selector-class">.back-to-top</span>&#123;</span><br><span class="line">    <span class="attribute">background</span>: <span class="number">#fc9d9a</span>; </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.back-to-top</span><span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#ffffff</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">// 设置背景图片</span><br><span class="line"><span class="selector-tag">body</span> &#123;</span><br><span class="line">    <span class="attribute">background</span>: <span class="built_in">url</span>(<span class="string">https://img-blog.csdnimg.cn/d0a8fda7ce3349459bd8a440fe06dc00.png</span>);</span><br><span class="line">    <span class="attribute">background-repeat</span>: no-repeat;</span><br><span class="line">    <span class="attribute">background-attachment</span>: fixed;</span><br><span class="line">    <span class="attribute">background-size</span>: cover;</span><br><span class="line">    <span class="attribute">background-position</span>: <span class="number">50%</span> <span class="number">50%</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">// 博客内容透明化</span><br><span class="line">// 文章内容透明化</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.main-inner</span> &gt; <span class="selector-class">.sub-menu</span>, <span class="selector-class">.main-inner</span> &gt; <span class="selector-class">.post-block</span>,</span><br><span class="line"><span class="selector-class">.main-inner</span> &gt; <span class="selector-class">.tabs-comment</span>, <span class="selector-class">.main-inner</span> &gt; <span class="selector-class">.comments</span>,</span><br><span class="line"><span class="selector-class">.main-inner</span> &gt; <span class="selector-class">.pagination</span> &#123;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="built_in">rgba</span>(<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>, <span class="number">0.9</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">// 侧边栏透明化</span><br><span class="line"><span class="selector-class">.sidebar</span>&#123;</span><br><span class="line">    <span class="attribute">opacity</span>: <span class="number">0.9</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">// 菜单栏透明化</span><br><span class="line"><span class="selector-class">.header-inner</span> &#123;</span><br><span class="line">    <span class="attribute">background</span>: <span class="built_in">rgba</span>(<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>, <span class="number">0.9</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">// 搜索透明度</span><br><span class="line"><span class="selector-class">.popup</span> &#123;</span><br><span class="line">    <span class="attribute">opacity</span>: <span class="number">0.9</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">// 代码块透明化</span><br><span class="line"><span class="selector-tag">figure</span><span class="selector-class">.highlight</span> &#123;</span><br><span class="line">    <span class="attribute">opacity</span>: <span class="number">0.8</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">// 底部红心跳动</span><br><span class="line"><span class="selector-class">.with-love</span> &#123;</span><br><span class="line">    <span class="attribute">animation</span>:beat <span class="number">1.2s</span> infinite;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">@keyframes</span> beat&#123;</span><br><span class="line">    <span class="number">30%</span>&#123;<span class="attribute">transform</span>:<span class="built_in">scale</span>(<span class="number">1.2</span>);&#125;</span><br><span class="line">    <span class="number">100%</span>&#123;<span class="attribute">transform</span>:<span class="built_in">scale</span>(<span class="number">1</span>);&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">// 文字选中颜色</span><br><span class="line"><span class="selector-pseudo">::selection</span> &#123;</span><br><span class="line">    <span class="attribute">background</span>: <span class="number">#fc9d9a</span>;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#fff</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.sidebar-nav</span> <span class="selector-tag">li</span><span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#fc9d9a</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.sidebar-toc-active</span> <span class="selector-class">.sidebar-nav-toc</span>, <span class="selector-class">.sidebar-overview-active</span> <span class="selector-class">.sidebar-nav-overview</span> &#123;</span><br><span class="line">    <span class="attribute">border-bottom-color</span>: <span class="number">#fc9d9a</span>;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#fc9d9a</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.sidebar-toc-active</span> <span class="selector-class">.sidebar-nav-toc</span><span class="selector-pseudo">:hover</span>, <span class="selector-class">.sidebar-overview-active</span> <span class="selector-class">.sidebar-nav-overview</span><span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#fc9d9a</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">// 归档页圆点颜色</span><br><span class="line"><span class="selector-class">.posts-collapse</span> <span class="selector-class">.post-content</span> <span class="selector-class">.post-header</span><span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line"><span class="attribute">border-bottom-color</span>: <span class="number">#fc9d9a</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.posts-collapse</span> <span class="selector-class">.post-content</span> <span class="selector-class">.post-header</span><span class="selector-pseudo">:hover</span><span class="selector-pseudo">::before</span> &#123;</span><br><span class="line"><span class="attribute">background</span>: <span class="number">#fc9d9a</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">// 左上菜单选中文字颜色</span><br><span class="line"><span class="selector-class">.main-menu</span> <span class="selector-class">.menu-item-active</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#fc9d9a</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.main-menu</span> <span class="selector-class">.menu-item-active</span><span class="selector-pseudo">::after</span> &#123;</span><br><span class="line">    <span class="attribute">background</span>: <span class="number">#fff</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">// 标题选中下划线颜色</span><br><span class="line"><span class="selector-class">.posts-expand</span> <span class="selector-class">.post-title-link</span><span class="selector-pseudo">::before</span> &#123;</span><br><span class="line">    <span class="attribute">background</span>: <span class="number">#fc9d9a</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.posts-expand</span> <span class="selector-class">.post-title-link</span><span class="selector-pseudo">:hover</span><span class="selector-pseudo">::before</span> &#123;</span><br><span class="line">    <span class="attribute">background</span>: <span class="number">#fc9d9a</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li>
<li>同样在_config.next.yml中把<code>custom_file_path</code>配置项中的<code>style</code>选项的注释去除，重新编译即可生效</li>
</ul>
]]></content>
      <categories>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
        <tag>Next</tag>
      </tags>
  </entry>
  <entry>
    <title>数组常用方法</title>
    <url>/p/71e2d821/</url>
    <content><![CDATA[<h3 id="数组转字符串-不改变原数组"><a href="#数组转字符串-不改变原数组" class="headerlink" title="数组转字符串(不改变原数组)"></a>数组转字符串(不改变原数组)</h3><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="title class_">Array</span>.<span class="title function_">toString</span>()    <span class="comment">// 返回一个字符串</span></span><br></pre></td></tr></table></figure>

<hr>
<h3 id="数组重排序-改变"><a href="#数组重排序-改变" class="headerlink" title="数组重排序(改变)"></a>数组重排序(改变)</h3><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="title class_">Array</span>.<span class="title function_">reverse</span>()     <span class="comment">// 颠倒顺序，不灵活</span></span><br><span class="line"><span class="title class_">Array</span>.<span class="title function_">sort</span>()        <span class="comment">// 方法调用每个数组项的toString方法，比较得到的字符串以确定如何排序</span></span><br></pre></td></tr></table></figure>
<ul>
<li>Array.sort()接收一个函数作为参数，函数传入两个参数value，<code>value1 &lt; value2</code>返回一个负数，value1在value2之前；<code>value1 &gt; value2</code>返回一个正数，value1在value2之后；<code>value1 === value2</code>返回一个0。 <figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">compare</span>(<span class="params">value1, value2</span>)&#123;</span><br><span class="line">    <span class="keyword">if</span>(value1 &lt; value2)</span><br><span class="line">        <span class="keyword">return</span> -<span class="number">1</span></span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(value1 &gt; value2)</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span></span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 简写</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">compare</span>(<span class="params">value1, value2</span>)&#123;</span><br><span class="line">    value1 - value2 ? -<span class="number">1</span> : <span class="number">1</span>    <span class="comment">// 升序</span></span><br><span class="line">    value1 - value2 ? <span class="number">1</span> : -<span class="number">1</span>    <span class="comment">// 降序 </span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li>
<li>Array.sort()原理： <figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span>(<span class="keyword">let</span> i=<span class="number">0</span>; i&lt;length; i++)&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">let</span> j=i+<span class="number">1</span>; j&lt;length; j++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="title function_">fn</span>(i, j) &gt; <span class="number">0</span>)&#123;</span><br><span class="line">            <span class="keyword">let</span> temp = j;</span><br><span class="line">            j = i;</span><br><span class="line">            i = temp;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li>
</ul>
<hr>
<h3 id="查找元素位置-不改变"><a href="#查找元素位置-不改变" class="headerlink" title="查找元素位置(不改变)"></a>查找元素位置(不改变)</h3><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="title class_">Array</span>.<span class="title function_">indexOf</span>(item, index)</span><br><span class="line"><span class="title class_">Array</span>.<span class="title function_">lastIndexOf</span>(item, index)</span><br></pre></td></tr></table></figure>
<ul>
<li>item：查找元素，index：查找的起点位置，找不到返回-1</li>
<li>数组有两个相等元素，查找到第一个符合元素则返回位置，不会继续查找下去</li>
</ul>
<hr>
<h3 id="查找是否包含某个元素-不改变"><a href="#查找是否包含某个元素-不改变" class="headerlink" title="查找是否包含某个元素(不改变)"></a>查找是否包含某个元素(不改变)</h3><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="title class_">Array</span>.<span class="title function_">findIndex</span>(<span class="keyword">function</span>(<span class="params">item, index, array</span>)&#123;&#125;)</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> color = [<span class="string">&#x27;r&#x27;</span>, <span class="string">&#x27;b&#x27;</span>, <span class="string">&#x27;g&#x27;</span>, <span class="string">&#x27;r&#x27;</span>]</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(color.<span class="title function_">findIndex</span>(<span class="function">(<span class="params">item, index, array</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> item === <span class="string">&#x27;r&#x27;</span></span><br><span class="line">&#125;))     <span class="comment">// 0</span></span><br><span class="line"></span><br><span class="line"><span class="title class_">Array</span>.<span class="title function_">includes</span>(item)</span><br></pre></td></tr></table></figure>

<hr>
<h3 id="操作方法"><a href="#操作方法" class="headerlink" title="操作方法"></a>操作方法</h3><ul>
<li>两个数组连接(不改变) <figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="title class_">Array1</span>.<span class="title function_">concat</span>(<span class="title class_">Array2</span>)       <span class="comment">// 返回新数组</span></span><br></pre></td></tr></table></figure></li>
<li>Array.slice(startIndex, endIndex)，截取返回新数组 (不改变) <figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> color = [<span class="string">&#x27;r&#x27;</span>, <span class="string">&#x27;b&#x27;</span>, <span class="string">&#x27;g&#x27;</span>, <span class="string">&#x27;y&#x27;</span>, <span class="string">&#x27;p&#x27;</span>]</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(color.<span class="title function_">slice</span>(<span class="number">3</span>, <span class="number">4</span>))      <span class="comment">// [&#x27;y&#x27;]</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// index是负数情况下，以数组长度加上该负数来确定位置</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(color.<span class="title function_">slice</span>(-<span class="number">2</span>, -<span class="number">1</span>))    <span class="comment">// [&#x27;y&#x27;]</span></span><br></pre></td></tr></table></figure></li>
<li>Array.splice (改变)<ul>
<li>删除：2个参数，要删除的第一项位置和要删除的项数，返回被删除的元素数组</li>
<li>插入：3个参数，起始位置、要删除项数、要插入的任意数量项</li>
<li>替换：3个参数，起始位置、要删除项数、要插入的任意数量项</li>
<li>如果没有被删除的项，则返回一个空数组<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> color = [<span class="string">&#x27;r&#x27;</span>, <span class="string">&#x27;b&#x27;</span>, <span class="string">&#x27;g&#x27;</span>]</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(color.<span class="title function_">splice</span>(<span class="number">0</span>, <span class="number">1</span>))             <span class="comment">// [&#x27;r&#x27;]</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(color)                          <span class="comment">// [&#x27;b&#x27;, &#x27;g&#x27;]</span></span><br><span class="line"></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(color.<span class="title function_">splice</span>(<span class="number">1</span>, <span class="number">0</span>, <span class="string">&#x27;y&#x27;</span>, <span class="string">&#x27;o&#x27;</span>))   <span class="comment">// []</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(color)                          <span class="comment">// [&#x27;b&#x27;, &#x27;y&#x27;, &#x27;o&#x27;, &#x27;g&#x27;]</span></span><br><span class="line"></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(color.<span class="title function_">splice</span>(<span class="number">1</span>, <span class="number">1</span>, <span class="string">&#x27;r&#x27;</span>, <span class="string">&#x27;p&#x27;</span>))   <span class="comment">// [&#x27;y&#x27;]</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(color)                          <span class="comment">// [&#x27;b&#x27;, &#x27;r&#x27;, &#x27;p&#x27;, &#x27;o&#x27;, &#x27;g&#x27;]</span></span><br></pre></td></tr></table></figure></li>
</ul>
</li>
</ul>
<hr>
<h3 id="栈方法-改变"><a href="#栈方法-改变" class="headerlink" title="栈方法(改变)"></a>栈方法(改变)</h3><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="title class_">Array</span>.<span class="title function_">push</span>()    <span class="comment">// 后推入</span></span><br><span class="line"><span class="title class_">Array</span>.<span class="title function_">pop</span>()     <span class="comment">// 后取出</span></span><br></pre></td></tr></table></figure>

<h3 id="队列方法-改变"><a href="#队列方法-改变" class="headerlink" title="队列方法(改变)"></a>队列方法(改变)</h3><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="title class_">Array</span>.<span class="title function_">shift</span>()       <span class="comment">//  前取出，并返回元素，同时数组长度-1</span></span><br><span class="line"><span class="title class_">Array</span>.<span class="title function_">unshift</span>()     <span class="comment">// 前推入，返回数组长度</span></span><br></pre></td></tr></table></figure>

<hr>
<h3 id="迭代方法-不改变"><a href="#迭代方法-不改变" class="headerlink" title="迭代方法(不改变)"></a>迭代方法(不改变)</h3><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="title class_">Array</span>.<span class="title function_">map</span>(<span class="keyword">function</span>(<span class="params">item, index, array</span>)&#123;&#125;)       <span class="comment">// 和forEach相似，返回一个等长数组</span></span><br><span class="line"><span class="title class_">Array</span>.<span class="title function_">forEach</span>(<span class="keyword">function</span>(<span class="params">item, index, array</span>)&#123;&#125;)   <span class="comment">// 无返回值</span></span><br><span class="line"><span class="title class_">Array</span>.<span class="title function_">every</span>(<span class="keyword">function</span>(<span class="params">item, index, array</span>)&#123;&#125;)     <span class="comment">// 全部true则为true</span></span><br><span class="line"><span class="title class_">Array</span>.<span class="title function_">some</span>(<span class="keyword">function</span>(<span class="params">item, index, array</span>)&#123;&#125;)      <span class="comment">// 某一个true为true</span></span><br><span class="line"><span class="title class_">Array</span>.<span class="title function_">filter</span>(<span class="keyword">function</span>(<span class="params">item, index, array</span>)&#123;&#125;)    <span class="comment">// 返回过滤后的数组</span></span><br></pre></td></tr></table></figure>

<hr>
<h3 id="Array-reduce-amp-Array-reduceRight"><a href="#Array-reduce-amp-Array-reduceRight" class="headerlink" title="Array.reduce &amp; Array.reduceRight"></a>Array.reduce &amp; Array.reduceRight</h3><ul>
<li>迭代数组所有项，构建返回一个最终值</li>
<li>2个参数：一个function(prev, cur, index, array)；一个起始值。</li>
<li>函数第一第二参数：第一次迭代发生在数组的第二项上，因此第一个参数是数组的第一项，第二个参数是数组的第二项</li>
<li>用法：<ul>
<li>计算数组中每个元素出现的次数   <figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> color = [<span class="string">&#x27;r&#x27;</span>, <span class="string">&#x27;b&#x27;</span>, <span class="string">&#x27;g&#x27;</span>, <span class="string">&#x27;r&#x27;</span>]</span><br><span class="line"><span class="keyword">let</span> res = color.<span class="title function_">reduce</span>(<span class="keyword">function</span>(<span class="params">prev, cur, index, array</span>)&#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(prev, cur)</span><br><span class="line">    <span class="keyword">if</span>(cur <span class="keyword">in</span> prev)</span><br><span class="line">        prev[cur]++</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        prev[cur] = <span class="number">1</span></span><br><span class="line">    <span class="keyword">return</span> prev</span><br><span class="line">&#125;, &#123;&#125;)</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(res)</span><br><span class="line"></span><br><span class="line"><span class="comment">// &#123;&#125; &#x27;r&#x27;</span></span><br><span class="line"><span class="comment">// &#123;r: 1&#125; &#x27;b&#x27;</span></span><br><span class="line"><span class="comment">// &#123;r: 1, b: 1&#125; &#x27;g&#x27;</span></span><br><span class="line"><span class="comment">// &#123;r: 1, b: 1, g: 1&#125; &#x27;r&#x27;</span></span><br><span class="line"><span class="comment">// &#123;r: 2, b: 1, g: 1&#125;</span></span><br></pre></td></tr></table></figure></li>
<li>数组求和</li>
<li>数组去重  <figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> color = [<span class="string">&#x27;r&#x27;</span>, <span class="string">&#x27;b&#x27;</span>, <span class="string">&#x27;g&#x27;</span>, <span class="string">&#x27;r&#x27;</span>]</span><br><span class="line"><span class="keyword">let</span> res = color.<span class="title function_">reduce</span>(<span class="keyword">function</span>(<span class="params">prev, cur, index, array</span>)&#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(prev, cur)</span><br><span class="line">    <span class="keyword">if</span>(prev.<span class="title function_">includes</span>(cur))</span><br><span class="line">        <span class="keyword">return</span> prev</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        prev.<span class="title function_">push</span>(cur)</span><br><span class="line">    <span class="keyword">return</span> prev</span><br><span class="line">&#125;, [])</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(res)</span><br></pre></td></tr></table></figure></li>
<li>多维数组转一维  <figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> color = [<span class="string">&#x27;r&#x27;</span>, [[<span class="string">&#x27;b&#x27;</span>, <span class="string">&#x27;g&#x27;</span>], <span class="string">&#x27;r&#x27;</span>]]</span><br><span class="line"><span class="keyword">let</span> transform = <span class="keyword">function</span>(<span class="params">val</span>)&#123;</span><br><span class="line">    <span class="keyword">return</span> val.<span class="title function_">reduce</span>(<span class="keyword">function</span>(<span class="params">prev, cur, index, array</span>)&#123;</span><br><span class="line">        <span class="keyword">return</span> prev.<span class="title function_">concat</span>(<span class="title class_">Array</span>.<span class="title function_">isArray</span>(cur)? <span class="title function_">transform</span>(cur) : cur)</span><br><span class="line">    &#125;, [])</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title function_">transform</span>(color))   <span class="comment">// [&#x27;r&#x27;, &#x27;b&#x27;, &#x27;g&#x27;, &#x27;r&#x27;]</span></span><br></pre></td></tr></table></figure></li>
</ul>
</li>
</ul>
]]></content>
      <categories>
        <category>前端</category>
      </categories>
      <tags>
        <tag>JavaScript</tag>
      </tags>
  </entry>
  <entry>
    <title>安装pyqt5、pyqt5-tools及其工具(Qt Designer、PyUIC、PyRcc)</title>
    <url>/p/c845697a/</url>
    <content><![CDATA[<h3 id="1-准备：我们在通过pip下载包的时候总是会遇到不知名的中断错误，这是个正常现象，可能是由于对方服务器过远或不稳定造成，我目前所知的解决方法有两个，如下："><a href="#1-准备：我们在通过pip下载包的时候总是会遇到不知名的中断错误，这是个正常现象，可能是由于对方服务器过远或不稳定造成，我目前所知的解决方法有两个，如下：" class="headerlink" title="1. 准备：我们在通过pip下载包的时候总是会遇到不知名的中断错误，这是个正常现象，可能是由于对方服务器过远或不稳定造成，我目前所知的解决方法有两个，如下："></a>1. 准备：我们在通过pip下载包的时候总是会遇到不知名的中断错误，这是个正常现象，可能是由于对方服务器过远或不稳定造成，我目前所知的解决方法有两个，如下：</h3><p>方法一：更换镜像</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">pip install 插件名 -i http://pypi.douban.com/simple/ --trusted-host pypi.douban.com</span><br><span class="line"></span><br><span class="line"><span class="comment"># 其它镜像源</span></span><br><span class="line"><span class="comment"># http://mirrors.aliyun.com/pypi/simple/  # 阿里云</span></span><br><span class="line"><span class="comment"># https://pypi.mirrors.ustc.edu.cn/simple/  # 中国科技大学</span></span><br><span class="line"><span class="comment"># https://pypi.tuna.tsinghua.edu.cn/simple/ # 清华大学</span></span><br><span class="line"><span class="comment"># http://pypi.mirrors.ustc.edu.cn/simple/ # 中国科学技术大学</span></span><br></pre></td></tr></table></figure>
<p>方法二：网站下载whl包安装，这里贴一个包网址：<span class="exturl" data-url="aHR0cHM6Ly93d3cubGZkLnVjaS5lZHUvfmdvaGxrZS9weXRob25saWJzLw==">https://www.lfd.uci.edu/~gohlke/pythonlibs/<i class="fa fa-external-link-alt"></i></span></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">pip install 下载包存放的绝对路径\包名称(包括扩展名)	<span class="comment"># 若在win下使用，是全局安装在win</span></span><br></pre></td></tr></table></figure>

<span id="more"></span>

<h3 id="2-安装pyqt5与pyqt5-tools。"><a href="#2-安装pyqt5与pyqt5-tools。" class="headerlink" title="2. 安装pyqt5与pyqt5-tools。"></a>2. 安装pyqt5与pyqt5-tools。</h3><p>项目中打开终端输入pip命令安装…</p>
<p><img data-src="https://img-blog.csdnimg.cn/20210312215746626.png" alt="图1"></p>
<p>也可以通过pycharm菜单栏中File -&gt; Settings -&gt; Project:你的项目 -&gt; Python Interpreter，这里也可以管理你的包和查看安装的包，点击右侧的+打开界面，填入你要安装的包，点击下方的Install Package安装</p>
<p><img data-src="https://img-blog.csdnimg.cn/2021031222104565.jpg" alt="图2"></p>
<p>到这里都完成的话，你的项目下的venv -&gt; Lib -&gt; site-package下也应该有包依赖了</p>
<p>环境变量安装<br>之前安装的pyqt5和pyqt5-tools需要配置环境变量。上方是在虚拟环境安装，我又在win下安装了pyqt和pyqt-tools，这里用的是win下的路径，虚拟环境的路径也可以。<br> 找到环境变量配置 <em>path</em>，添加 <em>pyqt5-tools</em> 的安装位置，其安装路径在 “ <em>Python安装路径\Lib\site-packages\pyqt5-tools</em> ”（需根据实际情况进行修改）：</p>
<p> <img data-src="https://img-blog.csdnimg.cn/20210312223853506.jpg" alt="图3"></p>
<p>在环境变量界面中点击“新建”，在系统环境变量中新建名为“QT_PLUGIN_PATH”的变量，该变量值为Qt插件的安装位置，可通过“浏览目录”依次找到“plugins”文件夹，通常其位置在“Python安装路径\Lib\site-packages\PyQt5\Qt\plugins\”位置（需根据实际情况修改）</p>
<h3 id="3-安装qt-desginer"><a href="#3-安装qt-desginer" class="headerlink" title="3. 安装qt desginer"></a>3. 安装qt desginer</h3><p>点击菜单栏“File”，弹出下拉框，选择“Setting”，弹出设置界面。在设置界面中选择“Tools”→“External Tools”，该部分操作如下图所示：</p>
<p><img data-src="https://img-blog.csdnimg.cn/20210312224942410.jpg" alt="图4"></p>
<p>点击“加号”按钮新建工具，弹出工具配置界面：在“Name”一栏填写“Qt-Designer”；在“Program”一栏填写designer.exe文件位置，我这里位置为：“C:\Users\用户名\Desktop\test2\venv\Lib\site-packages\qt5_applications\Qt\bin\designer.exe”（需根据实际情况填写）；在“Working directory”一栏填写<code>$FileDir$</code>。最后点击“OK”，如下图所示：</p>
<p><img data-src="https://img-blog.csdnimg.cn/20210312225605699.jpg" alt="图5"></p>
<p>点击菜单栏“Tools”，弹出下拉框，选择“External Tools”，弹出工具选择框。选择“Qt-Designer”并点击，若出现Qt Designer的软件界面则表示配置成功，当然也可能出现如下的问题框：</p>
<p><img data-src="https://img-blog.csdnimg.cn/20210312230235322.jpg" alt="图6"></p>
<p>若出现以上问题，解决方案是将pyqt5_tools\Qt\plugins文件夹进行复制，覆盖到site-packages\pyqt5_tools\Qt\bin目录下，再次菜单栏打开Tools -&gt; External Tools -&gt;  Designer 即可打开软件界面。</p>
<h3 id="4-安装pyuic"><a href="#4-安装pyuic" class="headerlink" title="4. 安装pyuic"></a>4. 安装pyuic</h3><p>同样按照以上方式添加pyuic工具，点击“加号”按钮，在弹出的编辑设置框中Name一栏填写“PyUIC”，我这里的位置为“C:\Users\用户名\Desktop\test2\venv\Scripts\pyuic5.exe”；arguments参数为<code>$FileName$ -o $FileNameWithoutExtension$.py</code>；Working directory参数为<code>$FileDir$</code>，该部分操作如下图所示：</p>
<p><img data-src="https://img-blog.csdnimg.cn/20210312232759881.jpg" alt="图7"></p>
<h3 id="5-安装及pyrcc"><a href="#5-安装及pyrcc" class="headerlink" title="5. 安装及pyrcc"></a>5. 安装及pyrcc</h3><p>同样按照以上方式添加pyrcc工具，点击“加号”按钮，在弹出的编辑设置框中Name一栏填写“PyRcc”，我这里的位置为“C:\Users\用户名\Desktop\pyqt5\python-upper-slot\venv\Scripts\pyrcc5.exe”；arguments参数为<code>$FileName$ -o $FileNameWithoutExtension$_rc.py</code>；Working directory参数为<code>$FileDir$</code></p>
<h3 id="6-结语"><a href="#6-结语" class="headerlink" title="6. 结语"></a>6. 结语</h3><ol>
<li><p>上述designer、pyuic和pyrcc的Program的路径也可以安装win下的路径，我这里是安装虚拟环境venv下的路径</p>
</li>
<li><p>若3个工具安装后pycharm菜单栏的Tools -&gt; External Tools 未显示任何工具，请重启pycharm再看看 </p>
</li>
</ol>
]]></content>
      <categories>
        <category>python</category>
      </categories>
      <tags>
        <tag>pycharm</tag>
      </tags>
  </entry>
  <entry>
    <title>浅读《简明日本史》-书籍作者：陈勤</title>
    <url>/p/1717174e/</url>
    <content><![CDATA[<ul>
<li>陷入困境，强者才能自救。</li>
<li>分清局势，辨析强弱，明白要害，统筹大局，一时之利有害长远。</li>
<li>理性思考总是好事。当对某件事趋于癫狂时，冲动占据了大脑，将做出难以预估代价和结果的坏事。</li>
<li>信息黑幕，信息获取不对称。</li>
<li>当视他人低自己一等时，就会封闭自己的同理心，在这个视角下，就在潜意识里默认自己所学的礼仪、操守、诚信、道德是完全不用施于低等人群的，变得更加没有下限。</li>
<li>“巴丹死亡行军”是日军在菲律宾巴丹半岛制造的虐杀美国、菲律宾联军战俘事件。近8w人的战俘在被押送160公里外战俘营，无食无水。掉队战俘遭到日军无情虐杀，约1.5w人因此死命。</li>
<li></li>
</ul>
]]></content>
      <categories>
        <category>阅读感悟</category>
      </categories>
      <tags>
        <tag>阅读感悟</tag>
      </tags>
  </entry>
  <entry>
    <title>字符串常用方法</title>
    <url>/p/47556d42/</url>
    <content><![CDATA[<h3 id="at"><a href="#at" class="headerlink" title="at"></a>at</h3><ul>
<li>接收一个整数作为参数，返回一个新字符串</li>
<li>参数范围为<code>0 ~ String.length-1</code>，不传参默认为0，超出返回undefined <figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> str = <span class="string">&#x27;abcde&#x27;</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(str.<span class="title function_">at</span>(<span class="number">1</span>))      <span class="comment">// &#x27;b&#x27;</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(str.<span class="title function_">at</span>(-<span class="number">2</span>))     <span class="comment">// &#x27;d&#x27;</span></span><br></pre></td></tr></table></figure></li>
</ul>
<hr>
<h3 id="charAt"><a href="#charAt" class="headerlink" title="charAt"></a>charAt</h3><ul>
<li>从一个字符串中返回指定字符</li>
<li>接收一个整数作为参数，范围为<code>0 ~ String.length-1</code>，不传参默认为0，超出返回空字符串</li>
</ul>
<hr>
<h3 id="indexOf-amp-lastIndexOf"><a href="#indexOf-amp-lastIndexOf" class="headerlink" title="indexOf &amp; lastIndexOf"></a>indexOf &amp; lastIndexOf</h3><ul>
<li>indexOf查找给定字符串<code>第一次</code>匹配位置，位置以给定字符串的第一个字符位置为返回，区分大小写</li>
<li>indexOf参数：searchString；fromIndex，开始查找的位置，默认0，范围0~string.length，&lt; 0则从0<code>向后</code>开始查找，&gt; string.length则从string.length开始<code>向后</code>查找，结果返回-1 <figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> str = <span class="string">&#x27;Hello World!&#x27;</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(str.<span class="title function_">indexOf</span>(<span class="string">&#x27;o&#x27;</span>))       <span class="comment">// 4</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(str.<span class="title function_">indexOf</span>(<span class="string">&#x27;o&#x27;</span>, -<span class="number">1</span>))   <span class="comment">// 4</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(str.<span class="title function_">indexOf</span>(<span class="string">&#x27;o&#x27;</span>, <span class="number">11</span>))   <span class="comment">// -1</span></span><br></pre></td></tr></table></figure></li>
<li>lastIndexOf查找给定字符串<code>最后一次</code>匹配位置，位置以给定字符串的第一个字符位置为返回，区分大小写</li>
<li>lastIndexOf参数：searchString；fromIndex，开始查找的位置，默认string.length，范围0~string.length，&lt; 0则从0开始<code>向前</code>查找，结果返回-1，&gt; string.length则从string.length开始<code>向前</code>查找 <figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> str = <span class="string">&#x27;Hello World!&#x27;</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(str.<span class="title function_">lastIndexOf</span>(<span class="string">&#x27;o&#x27;</span>))       <span class="comment">// 7</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(str.<span class="title function_">lastIndexOf</span>(<span class="string">&#x27;o&#x27;</span>, -<span class="number">1</span>))   <span class="comment">// -1</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(str.<span class="title function_">lastIndexOf</span>(<span class="string">&#x27;o&#x27;</span>, <span class="number">11</span>))   <span class="comment">// 7</span></span><br></pre></td></tr></table></figure></li>
</ul>
<hr>
<h3 id="includes"><a href="#includes" class="headerlink" title="includes"></a>includes</h3><ul>
<li>是否包含searchString，返回true or false，区分大小写</li>
<li>参数：searchString；position，从当前字符串的哪个索引位置开始搜寻子字符串，默认值为 0</li>
</ul>
<hr>
<h3 id="endsWith-amp-startsWith"><a href="#endsWith-amp-startsWith" class="headerlink" title="endsWith &amp; startsWith"></a>endsWith &amp; startsWith</h3><ul>
<li>区分大小写</li>
<li>endsWith：判断当前字符串是否是以另外一个给定的子字符串结尾的，结果返回true or false。参数：searchString；length(可选)，作为str的长度 <figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> str = <span class="string">&#x27;Today is cloudy!&#x27;</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(str.<span class="title function_">endsWith</span>(<span class="string">&#x27;Today&#x27;</span>, <span class="number">5</span>))   <span class="comment">// true</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(str.<span class="title function_">endsWith</span>(<span class="string">&#x27;Today&#x27;</span>, <span class="number">4</span>))   <span class="comment">// false</span></span><br></pre></td></tr></table></figure></li>
<li>startsWith: 判断当前字符串是否是以另外一个给定的子字符串开头的，结果返回true or false。参数：子字符串；position(可选)，作为str开始的位置</li>
</ul>
<hr>
<h3 id="concat"><a href="#concat" class="headerlink" title="concat"></a>concat</h3><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> strArr = [<span class="string">&#x27;a&#x27;</span>, <span class="string">&#x27;b&#x27;</span>, <span class="string">&#x27;c&#x27;</span>]</span><br><span class="line"><span class="keyword">let</span> str = <span class="string">&#x27;&#x27;</span>.<span class="title function_">concat</span>(...strArr)</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(str)</span><br></pre></td></tr></table></figure>

<hr>
<h3 id="待续"><a href="#待续" class="headerlink" title="待续"></a>待续</h3>]]></content>
      <categories>
        <category>前端</category>
      </categories>
      <tags>
        <tag>JavaScript</tag>
      </tags>
  </entry>
</search>
